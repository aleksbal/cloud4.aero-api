{
  "openapi": "3.1.0",
  "info": {
    "title": "Cloud4.aero NOTAM API",
    "description": "API for retrieving NOTAMs with different filters.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://cloud4.aero/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/notam/icao/{status}/{designator}": {
      "get": {
        "summary": "Retrieve NOTAMs by ICAO designator",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Filter by NOTAM status (current-scheduled or all)",
            "schema": {
              "type": "string",
              "enum": ["current-scheduled", "all"]
            }
          },
          {
            "name": "designator",
            "in": "path",
            "required": true,
            "description": "Four-letter ICAO designator (FIR, UIR, or airport)",
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{4}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GeoJSON FeatureCollection of NOTAMs",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NOTAMFeatureCollection" }
              }
            }
          }
        }
      }
    },
    "/notam/circle/{status}/{coordinate}/{radius}": {
      "get": {
        "summary": "Retrieve NOTAMs by radius around coordinates",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Filter by NOTAM status (current-scheduled or all)",
            "schema": {
              "type": "string",
              "enum": ["current-scheduled", "all"]
            }
          },
          {
            "name": "coordinate",
            "in": "path",
            "required": true,
            "description": "Semicolon-separated list of coordinates (lon,lat)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "path",
            "required": true,
            "description": "Radius in nautical miles",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GeoJSON FeatureCollection of NOTAMs",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NOTAMFeatureCollection" }
              }
            }
          }
        }
      }
    },
    "/notam/route/{status}/{line}/{radius}": {
      "get": {
        "summary": "Retrieve NOTAMs along a route",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Filter by NOTAM status (current-scheduled or all)",
            "schema": {
              "type": "string",
              "enum": ["current-scheduled", "all"]
            }
          },
          {
            "name": "line",
            "in": "path",
            "required": true,
            "description": "Line string specification (e.g., EDDB;lon,lat;lon,lat;EDDV)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "path",
            "required": true,
            "description": "Buffer radius in nautical miles",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GeoJSON FeatureCollection of NOTAMs",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NOTAMFeatureCollection" }
              }
            }
          }
        }
      }
    },
    "/notam/bbox/{status}/{bbox}": {
      "get": {
        "summary": "Retrieve NOTAMs within a bounding box",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Filter by NOTAM status (current-scheduled or all)",
            "schema": {
              "type": "string",
              "enum": ["current-scheduled", "all"]
            }
          },
          {
            "name": "bbox",
            "in": "path",
            "required": true,
            "description": "Bounding box coordinates (lon,lat,lon,lat)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GeoJSON FeatureCollection of NOTAMs",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NOTAMFeatureCollection" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NOTAMFeatureCollection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["FeatureCollection"]
          },
          "cursor": {
            "type": "string",
            "description": "Cursor for messaging"
          },
          "features": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NOTAMFeature" }
          }
        },
        "required": ["type", "features"]
      },
      "NOTAMFeature": {
        "type": "object",
        "properties": {
          "geometry": {
            "$ref": "#/components/schemas/GeoJSONPoint"
          },
          "properties": {
            "type": "object",
            "properties": {
              "NOF": { "type": "string" },
              "Series": { "type": "string" },
              "Number": { "type": "integer" },
              "Year": { "type": "integer" },
              "Type": { "type": "string", "enum": ["N", "R", "C"] },
              "Text": { "type": "string" },
              "ItemA": { "type": "string" },
              "ItemB": { "type": "string" },
              "ItemC": { "type": "string" }
            }
          }
        }
      },
      "GeoJSONPoint": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["Point"]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          }
        },
        "required": ["type", "coordinates"]
      }
    }
  }
}
